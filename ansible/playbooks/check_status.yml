- hosts: loadbalancer
  become: yes
  tasks:
   - name: Check status of nginx
     command: service nginx status
     changed_when: false

   - name: verify nginx is listening on 80
     wait_for: port=80 timeout=1

- hosts: webserver
  become: yes
  tasks:
   - name: Check status of apache2
     command: service apache2 status
     changed_when: false

   - name: verify apache2 is listening on 80
     wait_for: port=80 timeout=1

- hosts: database
  become: yes
  tasks:
   - name: Check status of mysql
     command: service mysql status
     changed_when: false

   - name: verify mysql is listening on 3306
     wait_for: host={{ ansible_enp0s3.ipv4.address }} port=3306 timeout=1

- hosts: control
  tasks:
    - name: verify end to end connectivity
      uri: url=http://{{item}}/ return_content=yes
      with_items: groups.loadbalancer
      register: lb_index

    - fail: msg="index failed to return content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{lb_index.results}}"

    - name: verify end to end DB response
      uri: url=http://{{item}}/db return_content=yes
      with_items: groups.loadbalancer
      register: lb_db

    - fail: msg="DB failed to return content"
      when: "'Database Connected from' not in item.content"
      with_items: "{{lb_db.results}}"


- hosts: loadbalancer
  tasks:
    - name: verify backend connectivity
      uri: url=http://{{item}}/ return_content=yes
      with_items: groups.webserver
      register: app_index

    - fail: msg="index failed to return content"
      when: "'Hello, from sunny {{item.item}}' not in item.content"
      with_items: "{{app_index.results}}"

    - name: verify backend DB response
      uri: url=http://{{item}}/db return_content=yes
      with_items: groups.webserver
      register: app_db

    - fail: msg="DB failed to return content"
      when: "'Database Connected from {{item.item}}!' not in item.content"
      with_items: "{{app_db.results}}"
